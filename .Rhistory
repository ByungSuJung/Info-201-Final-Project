# Group by teams
players.rating.70 <- filter(soccer.data, overall > 70)
league.data <- group_by(players.rating.70, league) %>%
summarize(number.players = n(),mean.age = mean(age), mean.rating = mean(overall), median.rating = median(overall))
# 7 Leagues
seven.leagues <- c("English Premier League", "USA Major League Soccer", "French Ligue 1", "Italian Serie A", "German Bundesliga", "Spanish Primera Divisi贸n",
"Mexican Liga MX")
seven.leagues.body.types <- seven.leagues.data %>% group_by(league) %>%
seven.leagues.data <- filter(soccer.data, league %in% seven.leagues)
summarize(percent.lean = round(mean(grepl("Lean", body_type)) * 100, digits = 2), percent.normal = round(mean(grepl("Normal", body_type)) * 100, digits = 2),
mean.stocky = round(mean(grepl("Stocky", body_type)), digits = 2))
# Function for finding leagues
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[full.league$club %in% not.current.teams,]
return (full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
View(last.season.britain)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (full.league)
}
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
View(last.season.britain)
source('~/Info-201-Final-Project/analysis.R')
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
last.season.usa <- Find2016LeagueData("USA Major League Soccer", not.current.usa.teams)
View(last.season.usa)
last.season.french <- Find2016LeagueData("French Ligue 1", not.current.french.teams)
View(last.season.french)
italy.league <- filter(soccer.data, league == "Italian Serie A") %>%
group_by(club) %>% summarize(amount.players = n())
View(italy.league)
not.current.french.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
View(italy.league)
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
source('~/Info-201-Final-Project/analysis.R')
german.league <- filter(soccer.data, league == "German Bundesliga") %>%
group_by(club) %>% summarize(amount.players = n())
View(german.league)
not.current.german.teams <- c("Hannover 96", "VfB Stuttgart")
last.season.germany <- Find2016LeagueData("German Bundesliga", not.current.german.teams)
spain.league <- filter(soccer.data, league == "Spanish Primera Divisi贸n") %>%
group_by(club) %>% summarize(amount.players = n())
View(spain.league)
not.current.french.teams <- c("Getafe CF", "Girona CF", "Levante UD")
last.season.spain <- Find2016LeagueData("Spanish Primera Divisi贸n", not.current.spain.teams)
q
not.current.spain.teams <- c("Getafe CF", "Girona CF", "Levante UD")
last.season.spain <- Find2016LeagueData("Spanish Primera Divisi贸n", not.current.spain.teams)
View(last.season.italy)
View(last.season.spain)
View(last.season.spain)
source('~/Info-201-Final-Project/analysis.R')
mexico.league <- filter(soccer.data, league == "Mexican Liga MX") %>%
group_by(club) %>% summarize(amount.players = n())
View(mexico.league)
not.current.mexico.teams <- c("Lobos de la BUAP")
mexico.last.season <- Find2016LeagueData("Mexican Liga MX", not.current.mexico.teams)
source('~/Info-201-Final-Project/analysis.R')
mexico.league <- filter(soccer.data, league == "Mexican Liga MX") %>%
group_by(club) %>% summarize(amount.players = n())
View(mexico.league)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
View(britain.wins)
View(britain.last.season)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
View(britain.last.season)
britain.full <- left_join(britain.last.season, britain.wins)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
usa.wins <- read.csv("Data/MLS2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
usa.full <- left_join(usa.last.season, usa.wins)
View(usa.wins)
View(usa.last.season)
View(usa.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.wins)
View(french.full)
View(usa.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.wins)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE)
View(french.wins)
View(french.wins)
french.full <- left_join(french.last.season, french.wins)
View(french.full)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.full <- left_join(italy.last.season, italy.wins)
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.full <- left_join(italy.last.season, italy.wins)
View(italy.full)
germany.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
germany.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
germany.full <- left_join(germany.last.season, germany.wins)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
View(germany.last.season)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.full <- left_join(spain.last.season, spain.wins)
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.full <- left_join(spain.last.season, spain.wins)
View(spain.full)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
View(mexico.full)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
View(mexico.full)
View(britain.full)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.last.season <- Find2016LeagueData("English Premier League", not.current.british.teams)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
View(germany.full)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n(), mean.overall = mean(overall), mean.potential = mean(potential),
mean.physical = mean(phy), average.int.rep = mean(international_reputation))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
View(germany.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(spain.full)
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
raw.data <- read.csv("./Data/complete.csv", stringsAsFactors = FALSE, encoding = 'UTF-8')
positions <- select(raw.data, contains("prefers_")) %>%
colnames()
View(raw.data)
View(raw.data, contains("prefers_"))
raw.numerical.col.names <- raw.data %>%
select_if(is.numeric) %>%
colnames()
numeric.col.names <- raw.numerical.col.names[-c(1,2)]
shiny::runApp()
View(raw.data)
>>>>>>> 743208eded8abe7a0f169bd4dac65953e6342d2e
source('~/Info-201-Final-Project/analysis.R')
shiny::runApp()
runApp()
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
View(soccer.data)
runApp()
runApp()
View(soccer.data)
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
View(soccer.data)
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Info-201-Final-Project/analysis.R')
View(soccer.data)
runApp()
source('~/Info-201-Final-Project/analysis.R')
runApp()
shiny::runApp()
runApp()
View(all.leagues)
source('~/Info-201-Final-Project/analysis.R')
col.leagues <- select(soccer.data, league)
all.leagues <- left_join(all.leagues, col.leagues)
View(col.leagues)
col.leagues <- group_by(soccer.data, club) %>% select(league)
View(soccer.data)
col.leagues <- group_by(soccer.data, soccer.data$club) %>% select(league)
rm(list = ls()[grep(".last",ls())])
rm(list = ls()[grep(".wins",ls())])
league.clubs <- all.leagues$Clubs
col.of.leagues <- filter(soccer.data, club %in% league.clubs)
View(col.of.leagues)
col.of.leagues <- filter(soccer.data, club %in% league.clubs) %>% group_by(club) %>% summarize(leagues = n_distinct())
col.of.leagues <- filter(soccer.data, club %in% league.clubs) %>% group_by(club) %>% summarize(leagues = n_distinct(league))
View(col.of.leagues)
View(col.of.leagues)
col.of.leagues <- filter(soccer.data, club %in% league.clubs)
View(col.of.leagues)
col.of.leagues <- as.character(unique(col.of.leagues$league))
col.of.leagues <- unique(col.of.leagues$league)
all.leagues$league = col.of.leagues
View(all.leagues)
library(dplyr)
library(tidyr)
library(plotly)
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# Function for finding leagues
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure), main.league )
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
britain.full <- left_join(britain.last.season, britain.wins)
britain.full$league <- "English Premier League"
View(britain.full)
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams)
full.league.name <- full.league$league
full.league <- group_by(full.league, club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams)
full.league.name <- full.league$league
full.league <- group_by(full.league, club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league$league <- full.league.name
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams)
full.league.name <- full.league$league
full.league <- group_by(full.league, club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
full.league$league <- full.league.name
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
full.league <- group_by(full.league, club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
full.league$league <- full.league.name
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
source('~/Info-201-Final-Project/analysis.R')
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams)
full.league.name <- as.character(unique(full.league$league))
full.league <- group_by(full.league, club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
full.league$league <- full.league.name
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(all.leagues)
shiny::runApp()
runApp()
View(all.leagues)
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
league.choices <- unique(all.leagues$League)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls()[grep(".last",ls())])
rm(list = ls()[grep(".wins",ls())])
rm(list = ls()[grep("not.",ls())])
rm(list = ls()[grep(".teams",ls())])
runApp()
runApp()
runApp()
runApp()
View(soccer.data)
shiny::runApp()
View(all.leagues)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(usa.full)
source('~/Info-201-Final-Project/analysis.R')
View(usa.full)
source('~/Info-201-Final-Project/analysis.R')
View(usa.full)
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
usa.wins <- read.csv("Data/MLS2017-2018.csv", stringsAsFactors = FALSE)
usa.teams <- usa.wins$club
usa.last.season <- Find2016LeagueData(usa.teams, not.current.usa.teams)
usa.full
usa.teams
source('~/Info-201-Final-Project/analysis.R')
View(all.leagues)
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
runApp()
runApp()
league.choices <- c("All",unique(all.leagues$League))
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Info-201-Final-Project/analysis.R')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
