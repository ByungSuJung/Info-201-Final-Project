full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (full.league)
}
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
View(last.season.britain)
source('~/Info-201-Final-Project/analysis.R')
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
last.season.britain <- Find2016LeagueData("English Premier League", not.current.british.teams)
last.season.usa <- Find2016LeagueData("USA Major League Soccer", not.current.usa.teams)
View(last.season.usa)
last.season.french <- Find2016LeagueData("French Ligue 1", not.current.french.teams)
View(last.season.french)
italy.league <- filter(soccer.data, league == "Italian Serie A") %>%
group_by(club) %>% summarize(amount.players = n())
View(italy.league)
not.current.french.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
View(italy.league)
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n())
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
last.season.italy <- Find2016LeagueData("Italian Serie A", not.current.italy.teams)
source('~/Info-201-Final-Project/analysis.R')
german.league <- filter(soccer.data, league == "German Bundesliga") %>%
group_by(club) %>% summarize(amount.players = n())
View(german.league)
not.current.german.teams <- c("Hannover 96", "VfB Stuttgart")
last.season.germany <- Find2016LeagueData("German Bundesliga", not.current.german.teams)
spain.league <- filter(soccer.data, league == "Spanish Primera División") %>%
group_by(club) %>% summarize(amount.players = n())
View(spain.league)
not.current.french.teams <- c("Getafe CF", "Girona CF", "Levante UD")
last.season.spain <- Find2016LeagueData("Spanish Primera División", not.current.spain.teams)
q
not.current.spain.teams <- c("Getafe CF", "Girona CF", "Levante UD")
last.season.spain <- Find2016LeagueData("Spanish Primera División", not.current.spain.teams)
View(last.season.italy)
View(last.season.spain)
View(last.season.spain)
source('~/Info-201-Final-Project/analysis.R')
mexico.league <- filter(soccer.data, league == "Mexican Liga MX") %>%
group_by(club) %>% summarize(amount.players = n())
View(mexico.league)
not.current.mexico.teams <- c("Lobos de la BUAP")
mexico.last.season <- Find2016LeagueData("Mexican Liga MX", not.current.mexico.teams)
source('~/Info-201-Final-Project/analysis.R')
mexico.league <- filter(soccer.data, league == "Mexican Liga MX") %>%
group_by(club) %>% summarize(amount.players = n())
View(mexico.league)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
View(britain.wins)
View(britain.last.season)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
View(britain.last.season)
britain.full <- left_join(britain.last.season, britain.wins)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
usa.wins <- read.csv("Data/MLS2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
usa.full <- left_join(usa.last.season, usa.wins)
View(usa.wins)
View(usa.last.season)
View(usa.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.wins)
View(french.full)
View(usa.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.full)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
french.full <- left_join(french.last.season, french.wins)
View(french.wins)
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE)
View(french.wins)
View(french.wins)
french.full <- left_join(french.last.season, french.wins)
View(french.full)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.full <- left_join(britain.last.season, britain.wins)
View(britain.full)
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.full <- left_join(italy.last.season, italy.wins)
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.full <- left_join(italy.last.season, italy.wins)
View(italy.full)
germany.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
germany.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
germany.full <- left_join(germany.last.season, germany.wins)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
View(germany.last.season)
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.full <- left_join(germany.last.season, germany.wins)
View(germany.full)
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.full <- left_join(spain.last.season, spain.wins)
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.full <- left_join(spain.last.season, spain.wins)
View(spain.full)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
View(mexico.full)
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.full <- left_join(mexico.last.season, mexico.wins)
View(mexico.full)
View(britain.full)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.last.season <- Find2016LeagueData("English Premier League", not.current.british.teams)
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
View(germany.full)
Find2016LeagueData <- function(league.name, not.current.teams){
full.league <- filter(soccer.data, league == league.name) %>%
group_by(club) %>% summarize(amount.players = n(), mean.overall = mean(overall), mean.potential = mean(potential),
mean.physical = mean(phy), average.int.rep = mean(international_reputation))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
View(germany.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
View(spain.full)
View(britain.full)
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
source('~/Info-201-Final-Project/analysis.R')
raw.data <- read.csv("./Data/complete.csv", stringsAsFactors = FALSE, encoding = 'UTF-8')
positions <- select(raw.data, contains("prefers_")) %>%
colnames()
View(raw.data)
View(raw.data, contains("prefers_"))
raw.numerical.col.names <- raw.data %>%
select_if(is.numeric) %>%
colnames()
numeric.col.names <- raw.numerical.col.names[-c(1,2)]
shiny::runApp()
View(raw.data)
>>>>>>> 743208eded8abe7a0f169bd4dac65953e6342d2e
source('~/Info-201-Final-Project/analysis.R')
shiny::runApp()
runApp()
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
View(soccer.data)
runApp()
runApp()
View(soccer.data)
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
View(soccer.data)
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Info-201-Final-Project/analysis.R')
View(soccer.data)
runApp()
source('~/Info-201-Final-Project/analysis.R')
runApp()
shiny::runApp()
runApp()
View(head(soccer.data))
soccer.data <- soccer.data[soccer.data == "NA"] <- 0
soccer.data <- soccer.data[is.na(soccer.data)] <- 0
# Loading the libraries
library(dplyr)
library(tidyr)
library(plotly)
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
soccer.data <- soccer.data[is.na(soccer.data)] <- 0
# Function for finding leagues
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
britain.full <- left_join(britain.last.season, britain.wins)
# USA
not.current.usa.teams <- c("Minnesota United","Atlanta United FC")
usa.wins <- read.csv("Data/MLS2016-2017.csv", stringsAsFactors = FALSE)
usa.teams <- usa.wins$club
usa.last.season <- Find2016LeagueData(usa.teams, not.current.usa.teams)
usa.full <- left_join(usa.last.season, usa.wins)
# France
not.current.french.teams <- c("Amiens SC Football", "ES Troyes AC", "RC Strasbourg")
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE)
french.teams <- french.wins$club
french.last.season <- Find2016LeagueData(french.teams, not.current.french.teams)
french.full <- left_join(french.last.season, french.wins)
# Italy
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.teams <- italy.wins$club
italy.last.season <- Find2016LeagueData(italy.teams, not.current.italy.teams)
italy.full <- left_join(italy.last.season, italy.wins)
# German
not.current.german.teams <- c("Hannover 96", "VfB Stuttgart")
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.teams <- germany.wins$club
germany.last.season <- Find2016LeagueData(germany.teams, not.current.german.teams)
germany.full <- left_join(germany.last.season, germany.wins)
# Spain
not.current.spain.teams <- c("Getafe CF", "Girona CF", "Levante UD")
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.teams <- spain.wins$club
spain.last.season <- Find2016LeagueData(spain.teams, not.current.spain.teams)
spain.full <- left_join(spain.last.season, spain.wins)
# Mexico
not.current.mexico.teams <- c("Lobos de la BUAP")
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.teams <- mexico.wins$club
mexico.last.season <- Find2016LeagueData(mexico.teams, not.current.mexico.teams)
mexico.full <- left_join(mexico.last.season, mexico.wins)
# Prep for graphs
## combining the data frames
britain.usa <- rbind(britain.full, usa.full)
french.germany <- rbind(french.full, germany.full)
spain.mexico <- rbind(spain.full, mexico.full)
fre.ger.ita <- rbind(french.germany, italy.full)
bri.usa.spa.mex <- rbind(britain.usa, spain.mexico)
all.leagues <- rbind(bri.usa.spa.mex, fre.ger.ita)
## Turning wins and losses to percentages
all.leagues <- mutate(all.leagues, percent.win = Wins/Games.Played)
all.leagues <- mutate(all.leagues, percent.loss = Losses/Games.Played)
## Changing column names for all graphs
new.column.names <- c("Clubs","Number of Players", "Median Overall Rating", "Median Potential Rating", "Median Physical Rating", "Average International Reputation Rating",
"Median Agility Rating", "Median Aggression Rating", "Median Stamina Rating", "Median Composure Rating", "Games Played", "Wins","Draws",
"Losses", "Goals For", "Goals Against", "Difference in Goals", "Total Points Scored", "Win Percentage", "Loss Percentage")
colnames(all.leagues) <- new.column.names
## Leagues
league.choices <- all.leagues$clubs
## Y Axis
teams.y.axis <- c("Win Percentage", "Loss Percentage", "Draws", "Losses", "Goals.For", "Goals.Against", "Goal.Difference", "Points")
## X Axis
teams.x.axis <- c("Median Overall Rating", "Median Potential Rating", "Median Physical Rating", "Average International Reputation Rating",
"Median Agility Rating", "Median Aggression Rating", "Median Stamina Rating", "Median Composure Rating")
## Prep names
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
soccer.data[is.na(soccer.data)] <- 0
soccer.data[is.na(soccer.data)] <- 0
View(head(soccer.data))
soccer.data[is.na(soccer.data)] <- 0
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
soccer.data[is.na(soccer.data)] <- 0
View(soccer.data)
runApp()
runApp()
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
runApp()
# Loading the libraries
library(dplyr)
library(tidyr)
library(plotly)
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
# Change NAs to value 0
# soccer.data[is.na(soccer.data)] <- 0
# Function for finding leagues
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Britain
not.current.british.teams <- c("Brighton & Hove Albion", "Huddersfield Town", "Newcastle United")
britain.wins <- read.csv("Data/premier2016-2017.csv", stringsAsFactors = FALSE)
britain.teams <- britain.wins$club
britain.last.season <- Find2016LeagueData(britain.teams, not.current.british.teams)
britain.full <- left_join(britain.last.season, britain.wins)
# USA
not.current.usa.teams <- c("Minnesota United","Atlanta United FC")
usa.wins <- read.csv("Data/MLS2016-2017.csv", stringsAsFactors = FALSE)
usa.teams <- usa.wins$club
usa.last.season <- Find2016LeagueData(usa.teams, not.current.usa.teams)
usa.full <- left_join(usa.last.season, usa.wins)
# France
not.current.french.teams <- c("Amiens SC Football", "ES Troyes AC", "RC Strasbourg")
french.wins <- read.csv("Data/ligue12016-2017.csv", stringsAsFactors = FALSE)
french.teams <- french.wins$club
french.last.season <- Find2016LeagueData(french.teams, not.current.french.teams)
french.full <- left_join(french.last.season, french.wins)
# Italy
not.current.italy.teams <- c("Benevento Calcio", "Ferrara (SPAL)", "Hellas Verona")
italy.wins <- read.csv("Data/serieA2016-2017.csv", stringsAsFactors = FALSE)
italy.teams <- italy.wins$club
italy.last.season <- Find2016LeagueData(italy.teams, not.current.italy.teams)
italy.full <- left_join(italy.last.season, italy.wins)
# German
not.current.german.teams <- c("Hannover 96", "VfB Stuttgart")
germany.wins <- read.csv("Data/bundesliga2016-2017.csv", stringsAsFactors = FALSE)
germany.teams <- germany.wins$club
germany.last.season <- Find2016LeagueData(germany.teams, not.current.german.teams)
germany.full <- left_join(germany.last.season, germany.wins)
# Spain
not.current.spain.teams <- c("Getafe CF", "Girona CF", "Levante UD")
spain.wins <- read.csv("Data/laliga2016-2017.csv", stringsAsFactors = FALSE)
spain.teams <- spain.wins$club
spain.last.season <- Find2016LeagueData(spain.teams, not.current.spain.teams)
spain.full <- left_join(spain.last.season, spain.wins)
# Mexico
not.current.mexico.teams <- c("Lobos de la BUAP")
mexico.wins <- read.csv("Data/ligaMXclausura2016-2017.csv", stringsAsFactors = FALSE)
mexico.teams <- mexico.wins$club
mexico.last.season <- Find2016LeagueData(mexico.teams, not.current.mexico.teams)
mexico.full <- left_join(mexico.last.season, mexico.wins)
# Prep for graphs
## combining the data frames
britain.usa <- rbind(britain.full, usa.full)
french.germany <- rbind(french.full, germany.full)
spain.mexico <- rbind(spain.full, mexico.full)
fre.ger.ita <- rbind(french.germany, italy.full)
bri.usa.spa.mex <- rbind(britain.usa, spain.mexico)
all.leagues <- rbind(bri.usa.spa.mex, fre.ger.ita)
## Turning wins and losses to percentages
all.leagues <- mutate(all.leagues, percent.win = Wins/Games.Played)
all.leagues <- mutate(all.leagues, percent.loss = Losses/Games.Played)
## Changing column names for all graphs
new.column.names <- c("Clubs","Number of Players", "Median Overall Rating", "Median Potential Rating", "Median Physical Rating", "Average International Reputation Rating",
"Median Agility Rating", "Median Aggression Rating", "Median Stamina Rating", "Median Composure Rating", "Games Played", "Wins","Draws",
"Losses", "Goals For", "Goals Against", "Difference in Goals", "Total Points Scored", "Win Percentage", "Loss Percentage")
colnames(all.leagues) <- new.column.names
## Leagues
league.choices <- all.leagues$clubs
## Y Axis
teams.y.axis <- c("Win Percentage", "Loss Percentage", "Draws", "Losses", "Goals.For", "Goals.Against", "Goal.Difference", "Points")
## X Axis
teams.x.axis <- c("Median Overall Rating", "Median Potential Rating", "Median Physical Rating", "Average International Reputation Rating",
"Median Agility Rating", "Median Aggression Rating", "Median Stamina Rating", "Median Composure Rating")
## Prep names
soccer.data <- plyr::rename(soccer.data, c("club"="Club", "age"="Age", "league"="League", "height_cm"="Height(cm)",
"weight_kg"="Weight(kg)", "eur_value"="Value(EUR)","eur_wage"="Wage(EUR)",
"eur_release_clause"="Release Clause(EUR)", "overall"="Overall", "potential"
="Potential", "pac"="Pace", "sho"="Shooting", "pas"="Passing", "dri"="Dribbling",
"def"="Defense", "phy"="Physical", "international_reputation"="International
Reputation", "skill_moves"="Skill Moves", "weak_foot"="Weak Foot", "crossing"=
"Crossing", "finishing"="Finishing", "heading_accuracy"="Heading Accuracy",
"short_passing"="Short Passing", "volleys"="Volleys", "dribbling"="Dribbling Skill",
"curve"="Curve", "free_kick_accuracy"="Free Kick Accuracy", "long_passing"="Long Passing",
"ball_control"="Ball Control", "acceleration"="Acceleration", "sprint_speed"="Sprint Speed",
"agility"="Agility", "reactions"="Reactions", "balance"="Balance", "shot_power"="Shot Power",
"jumping"="Jumping", "stamina"="Stamina", "strength"="Strength", "long_shots"="Long Shots",
"aggression"="Aggression", "interceptions"="Interceptions", "positioning"="Positioning",
"vision"="Vision", "penalties"="Penalties", "composure"="Composure", "marking"="Marking",
"standing_tackle"="Standing Tackle", "sliding_tackle"="Sliding Tackle", "gk_diving"="Goalkeeper Diving",
"gk_handling"="Goalkeeper Handling", "gk_kicking"="Goalkeeper Kicking", "gk_positioning"=
"Goalkeeper Positioning", "gk_reflexes"="Goalkeeper Reflexes", "rs"="Right Striker", "rw"= "Right Wing",
"rf"="Right Forward", "ram"="Right Attacking Midfielder", "rcm"="Right Center Midfielder",
"rm"="Right Midfielder", "rdm"="Right Defensive Midfielder", "rcb"="Right Center Back",
"rb"="Right Back", "rwb"="Right Wing Back", "st"="Striker", "lw"="Left Wing", "cf"="Center Forward",
"cam"="Center Attacking Midfielder", "cm"="Center Midfielder", "lm"="Left Midfielder",
"cdm"="Center Defensive Midfielder", "cb"="Center Back", "lb"="Left Back", "lwb"="Left Wing Back",
"ls"="Left Striker", "lf"="Left Forward", "lam"="Left Attacking Midfielder", "lcm"="Left Center Midfielder",
"ldm"="Left Defensive Midfielder", "lcb"="Left Center Back", "gk"="Goalkeeper"))
runApp()
runApp()
runApp()
View(soccer.data$Overall > 90)
runApp()
# Function for finding leagues
Find2016LeagueData <- function(league.teams, not.current.teams){
full.league <- filter(soccer.data, club %in% league.teams) %>%
group_by(club) %>% summarize(amount.players = n(), median.overall = median(overall), median.potential = median(potential),
median.physical = median(phy), average.int.rep = mean(international_reputation), median.agility = median(agility),
median.aggression = median(aggression), median.stamina = median(stamina), median.composure = median(composure))
last.season.full.league <- full.league[!full.league$club %in% not.current.teams,]
return (last.season.full.league)
}
# Setting working directory
soccer.data <- read.csv("Data/complete.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
View(soccer.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
new.soccer.data <- na.omit(soccer.data)
new.soccer.data <- na.omit(soccer.data)
View(new.soccer.data)
runApp()
runApp()
new.soccer.dat <- soccer.data[]
runApp()
